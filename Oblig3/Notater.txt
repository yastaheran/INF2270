writebyte:
void writebyte (FILE *f, byte b) {
	fwrite(&b, 1, 1, f);
}

writeutf8char:
sjekka først i hvilken range tallet var i. 
Ut ifra det så bruke shift og and (til utnulling) til å lage de ulike bytene, og or 
for å sette inn starten (110 eller 10 etc)
kalle writebyte for hver

void writeutf8char(FILE *F, unsigned long u) {
	unsigned char bytes[4];
	unsigned char b, b2, b3, b4;
	if(u == 0xf0 && u < 0xff0) { 				//hvis 4 byte
		bytes[0] = (u >> 24) & 0xf0;
		b = bytes[0];
		writebyte(f, b);
		bytes[1] = (u >> 16) & 0xf0;
		b2 = bytes[1];
		writebyte(f, b2);
		bytes[2] = (u >> 8) & 0xf0;
		b3 = bytes[2];
		writebyte(f, b3);
		bytes[3] = u & 0xf0;
		b4 = bytes[3];
		writebyte(f, b4);
	} else if(u == 0xe0 && u < 0xf0) {			//hvis 3 byte
		bytes[0] = (u >> 16) & 0xe0;
		b = bytes[0];
		writebyte(f, b);
		bytes[1] = (u >> 8) & 0xe0;
		b2 = bytes[1];
		writebyte(f, b2);
		bytes[2] = u & 0xe0;
		b3 = bytes[2];
		writebyte(f, b3);
	} else if(u == 0xc0 && u < 0xe0) {			//hvis 2 byte
		bytes[0] = (u >> 8) & 0xc0;
		b = bytes[0];
		writebyte(f, b);
		bytes[1] = u & 0xc0;
		b2 = bytes[1];
		writebyte(f, b2);
	} else if(u == 0x0 && u < 0xc0) {			//hvis 1 byte
		bytes[0] = u & 0x0;
		b = bytes[0];
		writebyte(f, b);
	}
}

reabyte:
int readbyte (FILE *f) {
	int status;
	char c;
	status = fread(&c, 1, 1, f);
	if (status <= 0) return -1;
	return (int)c;
}

readut8char:
Der leser du først en byte, sjekker hva den starter med, '110' f.eks. Og da vet du at du 
må lese en til, og så setter du dem sammen.
Hadde det vært 1110 så måtte du ha lest to til

long readutf8char(FILE *f) {
	long c;
	int ch = readbyte(f);
	if(ch == 0x00) {
		c = (long)ch;
	} else if(ch == 0xc0) {
		c = (long)ch;
		ch = readbyte(f);
		c += (long)ch;
	} else if(ch == 0xe0) {
		c = (long)ch;
		ch = readbyte(f);
		c+= (long)ch;
		ch = readbyte(f);
		c+= (long)ch;
	} else if (ch == 0xf0) {
		c = (long)ch;
		ch = readbyte(f);
		c+= (long)ch;
		ch = readbyte(f);
		c+= (long)ch;
		ch = readbyte(f);
		c+= (long)ch;
	}
	return c;
}
